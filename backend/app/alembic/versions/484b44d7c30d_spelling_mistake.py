"""spelling mistake

Revision ID: 484b44d7c30d
Revises: d7954848d1be
Create Date: 2021-01-10 19:46:18.206709-08:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '484b44d7c30d'
down_revision = 'd7954848d1be'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_assays_id', table_name='assays')
    op.drop_table('assays')
    op.drop_index('ix_labs_id', table_name='labs')
    op.drop_table('labs')
    op.drop_index('ix_kits_kit_id', table_name='kits')
    op.drop_table('kits')
    op.drop_index('ix_devices_id', table_name='devices')
    op.drop_table('devices')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('devices_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('long_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('short_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('manufacturer_sku', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='devices_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_devices_id', 'devices', ['id'], unique=False)
    op.create_table('kits',
    sa.Column('kit_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('kit_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kit_sku', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shipping_speed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('outbound_tracking', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('delivered_to_recepient', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('inbound_tracking', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('delivered_to_processor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('kit_id', name='kits_pkey')
    )
    op.create_index('ix_kits_kit_id', 'kits', ['kit_id'], unique=False)
    op.create_table('labs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('legal_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('legal_address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contact_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('billing_contact_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('billing_contact_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('billing_contact_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['legal_address_id'], ['addresses.id'], name='labs_legal_address_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='labs_pkey')
    )
    op.create_index('ix_labs_id', 'labs', ['id'], unique=False)
    op.create_table('assays',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('long_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('short_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('loinc_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cpt_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cash_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_available', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], name='assays_device_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assays_pkey')
    )
    op.create_index('ix_assays_id', 'assays', ['id'], unique=False)
    # ### end Alembic commands ###
