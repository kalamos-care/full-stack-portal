{"ast":null,"code":"var _jsxFileName = \"/app/src/marketing/company/blog/Blog.tsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Container } from '@material-ui/core/';\nimport Divider from '@material-ui/core/Divider';\nimport Markdown from './Markdown';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\nconst useStyles = makeStyles(theme => ({\n  markdown: { ...theme.typography.body2,\n    padding: theme.spacing(3, 0)\n  }\n}));\nconst posts = [post1, post2, post3];\nexport const Blog = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Raw Talk\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), posts.map(post => /*#__PURE__*/React.createElement(Markdown, {\n    className: classes.markdown,\n    key: post.substring(0, 40),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, post))));\n};","map":{"version":3,"sources":["/app/src/marketing/company/blog/Blog.tsx"],"names":["React","makeStyles","Typography","Grid","Container","Divider","Markdown","post1","post2","post3","useStyles","theme","markdown","typography","body2","padding","spacing","posts","Blog","classes","map","post","substring"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,SAA3B,QAA4C,oBAA5C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE,EACN,GAAGD,KAAK,CAACE,UAAN,CAAiBC,KADd;AAENC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAFH;AAD2B,CAAZ,CAAD,CAA5B;AAOA,MAAMC,KAAK,GAAG,CAACV,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAd;AAEA,OAAO,MAAMS,IAAQ,GAAG,MAAM;AAC1B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKO,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACP,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEF,OAAO,CAACP,QAA7B;AAAuC,IAAA,GAAG,EAAES,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADH,CALL,CADJ,CADJ;AAeH,CAlBM","sourcesContent":["import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Typography, Grid, Container } from '@material-ui/core/';\nimport Divider from '@material-ui/core/Divider';\n\nimport Markdown from './Markdown';\n\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\n\nconst useStyles = makeStyles((theme) => ({\n    markdown: {\n        ...theme.typography.body2,\n        padding: theme.spacing(3, 0),\n    },\n}));\n\nconst posts = [post1, post2, post3];\n\nexport const Blog: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\">\n            <Grid item xs={12} md={8}>\n                <Typography variant=\"h6\" gutterBottom>\n                    Raw Talk\n                </Typography>\n                <Divider />\n                {posts.map((post) => (\n                    <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n                        {post}\n                    </Markdown>\n                ))}\n            </Grid>\n        </Container>\n    );\n};"]},"metadata":{},"sourceType":"module"}