{"ast":null,"code":"import React from'react';import{fetchUtils,Admin as ReactAdmin,Resource}from'react-admin';import simpleRestProvider from'ra-data-simple-rest';import authProvider from'./authProvider';import{UserList,UserEdit,UserCreate}from'./Users';var httpClient=function httpClient(url,options){if(!options){options={};}if(!options.headers){options.headers=new Headers({Accept:'application/json'});}var token=localStorage.getItem('token');options.headers.set('Authorization',\"Bearer \".concat(token));return fetchUtils.fetchJson(url,options);};var dataProvider=simpleRestProvider('api/v1',httpClient);export var Admin=function Admin(){return/*#__PURE__*/React.createElement(ReactAdmin,{dataProvider:dataProvider,authProvider:authProvider},function(permissions){return[permissions==='admin'?/*#__PURE__*/React.createElement(Resource,{name:\"users\",list:UserList,edit:UserEdit,create:UserCreate}):null];});};","map":{"version":3,"sources":["/home/bbthorson/full-stack-portal/frontend/src/admin/Admin.tsx"],"names":["React","fetchUtils","Admin","ReactAdmin","Resource","simpleRestProvider","authProvider","UserList","UserEdit","UserCreate","httpClient","url","options","headers","Headers","Accept","token","localStorage","getItem","set","fetchJson","dataProvider","permissions"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAA0B,OAA1B,CACA,OAASC,UAAT,CAAqBC,KAAK,GAAIC,CAAAA,UAA9B,CAA0CC,QAA1C,KAA0D,aAA1D,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qBAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAASC,QAAT,CAAmBC,QAAnB,CAA6BC,UAA7B,KAA+C,SAA/C,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAWC,OAAX,CAA4B,CAC7C,GAAI,CAACA,OAAL,CAAc,CACZA,OAAO,CAAG,EAAV,CACD,CACD,GAAI,CAACA,OAAO,CAACC,OAAb,CAAsB,CACpBD,OAAO,CAACC,OAAR,CAAkB,GAAIC,CAAAA,OAAJ,CAAY,CAAEC,MAAM,CAAE,kBAAV,CAAZ,CAAlB,CACD,CACD,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAN,OAAO,CAACC,OAAR,CAAgBM,GAAhB,CAAoB,eAApB,kBAA+CH,KAA/C,GACA,MAAOf,CAAAA,UAAU,CAACmB,SAAX,CAAqBT,GAArB,CAA0BC,OAA1B,CAAP,CACD,CAVD,CAYA,GAAMS,CAAAA,YAAY,CAAGhB,kBAAkB,CAAC,QAAD,CAAWK,UAAX,CAAvC,CAEA,MAAO,IAAMR,CAAAA,KAAS,CAAG,QAAZA,CAAAA,KAAY,EAAM,CAC7B,mBACE,oBAAC,UAAD,EAAY,YAAY,CAAEmB,YAA1B,CAAwC,YAAY,CAAEf,YAAtD,EACG,SAACgB,WAAD,QAAmC,CAClCA,WAAW,GAAK,OAAhB,cACE,oBAAC,QAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAEf,QAFR,CAGE,IAAI,CAAEC,QAHR,CAIE,MAAM,CAAEC,UAJV,EADF,CAOI,IAR8B,CAAnC,EADH,CADF,CAcD,CAfM","sourcesContent":["import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\n\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'user') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n          />\n        ) : null,\n      ]}\n    </ReactAdmin>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}