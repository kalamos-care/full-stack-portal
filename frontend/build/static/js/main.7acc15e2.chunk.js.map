{"version":3,"sources":["utils/auth.ts","layout/Header.tsx","admin/authProvider.ts","admin/Users/UserEdit.tsx","admin/Users/UserList.tsx","admin/Users/UserCreate.tsx","admin/Admin.tsx","utils/api.ts","config/index.tsx","views/Home.tsx","views/Login.tsx","views/SignUp.tsx","views/ProviderDash.tsx","views/PrivateRoute.tsx","Routes.tsx","layout/Body.tsx","layout/Footer.tsx","App.tsx","index.tsx"],"names":["isAuthenticated","permissions","localStorage","getItem","login","email","password","a","length","Error","formData","FormData","append","request","Request","method","body","fetch","response","status","json","data","detail","decodedToken","decodeJwt","setItem","signUp","passwordConfirmation","useStyles","makeStyles","theme","link","color","title","flexGrow","textAlign","Header","classes","loggedIn","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","Typography","variant","className","Button","href","IconButton","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","authProvider","username","then","statusText","access_token","logout","removeItem","Promise","resolve","checkError","error","reject","checkAuth","getPermissions","role","UserEdit","props","Edit","SimpleForm","TextInput","disabled","source","PasswordInput","BooleanInput","UserList","List","Datagrid","rowClick","TextField","EmailField","BooleanField","EditButton","UserCreate","Create","dataProvider","simpleRestProvider","url","options","headers","Headers","Accept","token","set","fetchUtils","fetchJson","Admin","Resource","name","list","edit","create","getMessage","message","display","flexWrap","margin","spacing","width","height","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","cards","Home","setMessage","setError","queryBackend","Container","maxWidth","component","align","gutterBottom","paragraph","Grid","container","justify","item","map","key","xs","sm","md","Card","CardMedia","image","CardContent","CardActions","size","CardActionArea","button","textTransform","Login","history","useHistory","setEmail","setPassword","handleSubmit","_","push","to","Paper","alignItems","Face","label","type","value","onChange","e","fullWidth","autoFocus","required","Fingerprint","Alert","severity","FormControlLabel","control","Checkbox","disableFocusRipple","disableRipple","SignUp","setPasswordConfirmation","ProviderDash","PrivateRoute","rest","render","createElement","Routes","path","exact","Body","bottom_nav","Footer","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","Link","Notifications","Folder","Chat","Date","getFullYear","app","header","justifyContent","fontSize","footer","bottom","App","Box","ReactDOM","document","getElementById"],"mappings":"2SAEaA,EAAkB,WAC7B,IAAMC,EAAcC,aAAaC,QAAQ,eACzC,QAAKF,IAGkB,SAAhBA,GAA0C,UAAhBA,IAWtBG,EAAK,uCAAG,WAAOC,EAAeC,GAAtB,uBAAAC,EAAA,yDAEbF,EAAMG,OAAS,GAAQF,EAASE,OAAS,EAF5B,sBAGX,IAAIC,MAAM,sCAHC,cAKbC,EAAW,IAAIC,UAEZC,OAAO,WAAYP,GAC5BK,EAASE,OAAO,WAAYN,GAEtBO,EAAU,IAAIC,QAAQ,aAAc,CACxCC,OAAQ,OACRC,KAAMN,IAZW,SAeIO,MAAMJ,GAfV,UAiBK,OAFlBK,EAfa,QAiBNC,OAjBM,uBAkBX,IAAIV,MAAM,yBAlBC,yBAqBAS,EAASE,OArBT,WAqBbC,EArBa,SAuBfH,EAASC,OAAS,KAAOD,EAASC,OAAS,KAvB5B,qBAwBbE,EAAKC,OAxBQ,uBAyBTD,EAAKC,OAzBI,cA2BXD,EA3BW,cA8Bf,iBAAkBA,IACdE,EAAoBC,YAAUH,EAAI,cACxCnB,aAAauB,QAAQ,QAASJ,EAAI,cAClCnB,aAAauB,QAAQ,cAAeF,EAAatB,cAjChC,kBAoCZoB,GApCY,4CAAH,wDA+CLK,EAAM,uCAAG,WACpBrB,EACAC,EACAqB,GAHoB,uBAAApB,EAAA,yDAMdF,EAAMG,OAAS,EAND,sBAOZ,IAAIC,MAAM,0BAPE,UASdH,EAASE,OAAS,EATJ,sBAUZ,IAAIC,MAAM,6BAVE,UAYdkB,EAAqBnB,OAAS,EAZhB,sBAaZ,IAAIC,MAAM,0CAbE,cAgBdC,EAAW,IAAIC,UAEZC,OAAO,WAAYP,GAC5BK,EAASE,OAAO,WAAYN,GAEtBO,EAAU,IAAIC,QAAQ,cAAe,CACzCC,OAAQ,OACRC,KAAMN,IAvBY,UA0BGO,MAAMJ,GA1BT,WA4BI,OAFlBK,EA1Bc,QA4BPC,OA5BO,uBA6BZ,IAAIV,MAAM,yBA7BE,yBAgCDS,EAASE,OAhCR,WAgCdC,EAhCc,SAiChBH,EAASC,OAAS,KAAOD,EAASC,OAAS,KAjC3B,qBAkCdE,EAAKC,OAlCS,uBAmCVD,EAAKC,OAnCK,cAqCZD,EArCY,cAwChB,iBAAkBA,IACdE,EAAoBC,YAAUH,EAAI,cACxCnB,aAAauB,QAAQ,QAASJ,EAAI,cAClCnB,aAAauB,QAAQ,cAAeF,EAAatB,cA3C/B,kBA8CboB,GA9Ca,4CAAH,0D,gFC9CbO,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,SAEXC,MAAO,CACHC,SAAU,EACVC,UAAW,YAsFJC,EAlFI,WACf,IAAMC,EAAUT,IACVU,EAAWtC,IAFI,EAIGuC,IAAMC,UAAS,GAJlB,gCAKWD,IAAMC,SAA6B,OAL9C,mBAKdC,EALc,KAKJC,EALI,KAMfC,EAAOC,QAAQH,GAUfI,EAAc,WAChBH,EAAY,OAIhB,OACI,kBAACI,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAQ,KACRC,UAAWd,EAAQJ,OAFvB,iBAQEK,GACE,oCACI,kBAACc,EAAA,EAAD,CAAQpB,MAAM,WACV,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,UAAjC,UAIJ,kBAACD,EAAA,EAAD,CAAQpB,MAAM,WACV,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,WAAjC,aAMXf,GACG,6BACI,kBAACgB,EAAA,EAAD,CAIIC,QAxCL,SAACC,GAChBd,EAAYc,EAAMC,gBAwCEzB,MAAM,WAEN,kBAAC,IAAD,OAEJ,kBAAC0B,EAAA,EAAD,CACIC,GAAG,cACHlB,SAAUA,EACVmB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBnB,KAAMA,EACNsB,QAASpB,GAET,kBAACqB,EAAA,EAAD,CAAUX,QAASV,GAAnB,WACA,kBAACqB,EAAA,EAAD,CAAUX,QAASV,GAAnB,mB,2CChDbsB,EA/CM,CACnB/D,MAAO,YAA4C,IAAzCgE,EAAwC,EAAxCA,SAAU9D,EAA8B,EAA9BA,SACdI,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAYwD,GAC5B1D,EAASE,OAAO,WAAYN,GAC5B,IAAMO,EAAU,IAAIC,QAAQ,aAAc,CACxCC,OAAQ,OACRC,KAAMN,IAER,OAAOO,MAAMJ,GACVwD,MAAK,SAACnD,GACL,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC9C,MAAM,IAAIV,MAAMS,EAASoD,YAE3B,OAAOpD,EAASE,UAEjBiD,MAAK,YAAuB,IAApBE,EAAmB,EAAnBA,aACDhD,EAAoBC,YAAU+C,GACpC,GAAiC,UAA7BhD,EAAatB,YACf,MAAM,IAAIQ,MAAM,aAElBP,aAAauB,QAAQ,QAAS8C,GAC9BrE,aAAauB,QAAQ,cAAeF,EAAatB,iBAGvDuE,OAAQ,WAGN,OAFAtE,aAAauE,WAAW,SACxBvE,aAAauE,WAAW,eACjBC,QAAQC,WAEjBC,WAAY,SAACC,GACX,IAAM1D,EAAS0D,EAAM1D,OACrB,OAAe,MAAXA,GAA6B,MAAXA,GACpBjB,aAAauE,WAAW,SACjBC,QAAQI,UAEVJ,QAAQC,WAEjBI,UAAW,kBACT7E,aAAaC,QAAQ,SAAWuE,QAAQC,UAAYD,QAAQI,UAC9DE,eAAgB,WACd,IAAMC,EAAO/E,aAAaC,QAAQ,eAClC,OAAO8E,EAAOP,QAAQC,QAAQM,GAAQP,QAAQI,W,6CCxCrCI,EAAe,SAACC,GAAD,OAC1B,kBAACC,EAAA,EAASD,EACR,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,UAAQ,EAACC,OAAO,OAC3B,kBAACF,EAAA,EAAD,CAAWE,OAAO,UAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,eAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,cAClB,kBAACC,EAAA,EAAD,CAAeD,OAAO,aACtB,kBAACE,EAAA,EAAD,CAAcF,OAAO,cACrB,kBAACE,EAAA,EAAD,CAAcF,OAAO,oB,sDCPdG,EAAe,SAACR,GAAD,OAC1B,kBAACS,EAAA,EAAST,EACR,kBAACU,EAAA,EAAD,CAAUC,SAAS,QACjB,kBAACC,EAAA,EAAD,CAAWP,OAAO,OAClB,kBAACQ,EAAA,EAAD,CAAYR,OAAO,UACnB,kBAACO,EAAA,EAAD,CAAWP,OAAO,eAClB,kBAACO,EAAA,EAAD,CAAWP,OAAO,cAClB,kBAACS,EAAA,EAAD,CAAcT,OAAO,cACrB,kBAACS,EAAA,EAAD,CAAcT,OAAO,iBACrB,kBAACU,EAAA,EAAD,S,SCXOC,EAAiB,SAAChB,GAAD,OAC5B,kBAACiB,EAAA,EAAWjB,EACV,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWE,OAAO,UAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,eAClB,kBAACF,EAAA,EAAD,CAAWE,OAAO,cAClB,kBAACC,EAAA,EAAD,CAAeD,OAAO,aACtB,kBAACE,EAAA,EAAD,CAAcF,OAAO,iBACrB,kBAACE,EAAA,EAAD,CAAcF,OAAO,iBCErBa,EAAeC,YAAmB,UAZrB,SAACC,EAAUC,GACvBA,IACHA,EAAU,IAEPA,EAAQC,UACXD,EAAQC,QAAU,IAAIC,QAAQ,CAAEC,OAAQ,sBAE1C,IAAMC,EAAQ1G,aAAaC,QAAQ,SAEnC,OADAqG,EAAQC,QAAQI,IAAI,gBAApB,iBAA+CD,IACxCE,IAAWC,UAAUR,EAAKC,MAKtBQ,EAAY,WACvB,OACE,kBAAC,IAAD,CAAYX,aAAcA,EAAclC,aAAcA,IACnD,SAAClE,GAAD,MAAmC,CAClB,UAAhBA,EACE,kBAACgH,EAAA,EAAD,CACEC,KAAK,QACLC,KAAMxB,EACNyB,KAAMlC,EACNmC,OAAQlB,IAER,U,oEC9BCmB,GAAU,uCAAG,8BAAA/G,EAAA,sEACDU,MCDvB,gCDAwB,cAClBC,EADkB,gBAGLA,EAASE,OAHJ,YAGlBC,EAHkB,QAKfkG,QALe,yCAMflG,EAAKkG,SANU,gCASjB7C,QAAQI,OAAO,uCATE,2CAAH,qDEejBlD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,WAEThB,KAAM,CACJwG,QAAS,OACTC,SAAU,OACV,QAAS,CACPC,OAAQ5F,EAAM6F,QAAQ,GACtBC,MAAO9F,EAAM6F,QAAQ,IACrBE,OAAQ/F,EAAM6F,QAAQ,MAI1BG,KAAM,CACJC,YAAajG,EAAM6F,QAAQ,IAE7BK,YAAa,CACXC,gBAAiBnG,EAAMoG,QAAQC,WAAWC,MAC1CC,QAASvG,EAAM6F,QAAQ,EAAG,EAAG,IAE/BW,YAAa,CACXC,UAAWzG,EAAM6F,QAAQ,IAE3Ba,SAAU,CACRC,WAAY3G,EAAM6F,QAAQ,GAC1Be,cAAe5G,EAAM6F,QAAQ,IAE/BgB,KAAM,CACJd,OAAQ,OACRL,QAAS,OACToB,cAAe,UAEjBC,UAAW,CACTJ,WAAY,UAEdK,YAAa,CACX5G,SAAU,OAIR6G,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAG1BC,GAAW,WAAO,IAAD,EACExG,mBAAiB,IADnB,mBACrB+E,EADqB,KACZ0B,EADY,OAEFzG,mBAAiB,IAFf,mBAErBqC,EAFqB,KAEdqE,EAFc,KAGtB7G,EAAUT,KAEVuH,EAAY,uCAAG,4BAAA5I,EAAA,+EAEK+G,KAFL,OAEXC,EAFW,OAGjB0B,EAAW1B,GAHM,gDAKjB2B,EAAS,EAAD,IALS,yDAAH,qDASlB,OACE,oCACK,8BAED,yBAAK/F,UAAWd,EAAQ2F,aACtB,kBAACoB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACpG,EAAA,EAAD,CAAYqG,UAAU,KAAKpG,QAAQ,KAAKqG,MAAM,SAASvH,MAAM,cAAcwH,cAAY,GAAvF,6CAGA,kBAACvG,EAAA,EAAD,CAAYC,QAAQ,KAAKqG,MAAM,SAASvH,MAAM,gBAAgByH,WAAS,GAAvE,mHAEE,6BAFF,4EAKA,yBAAKtG,UAAWd,EAAQiG,aACtB,kBAACoB,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,EAAGiC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACzG,EAAA,EAAD,CAAQF,QAAQ,YAAYlB,MAAM,WAAlC,wBAIF,kBAAC0H,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACzG,EAAA,EAAD,CAAQF,QAAQ,WAAWlB,MAAM,WAAjC,2BAQV,kBAACoH,EAAA,EAAD,CAAWjG,UAAWd,EAAQmG,SAAUa,SAAS,MAE/C,kBAACK,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,GACtBoB,GAAMe,KAAI,SAACnB,GAAD,OACT,kBAACe,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAKpB,EAAMqB,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvC,kBAACC,GAAA,EAAD,CAAMhH,UAAWd,EAAQsG,MACvB,kBAACyB,GAAA,EAAD,CACEjH,UAAWd,EAAQwG,UACnBwB,MAAM,qCACNpI,MAAM,gBAER,kBAACqI,GAAA,EAAD,CAAanH,UAAWd,EAAQyG,aAC9B,kBAAC7F,EAAA,EAAD,CAAYuG,cAAY,EAACtG,QAAQ,KAAKoG,UAAU,MAAhD,WAGA,kBAACrG,EAAA,EAAD,iFAIF,kBAACsH,GAAA,EAAD,KACE,kBAACnH,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WAA3B,QAGA,kBAACoB,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WAA3B,iBAUd,kBAACoH,EAAA,EAAD,CAAWjG,UAAWd,EAAQrB,MAC5B,kBAAC0I,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIC,GAAI,GACrB,kBAACE,GAAA,EAAD,CAAMhH,UAAWd,EAAQsG,MACvB,kBAAC8B,GAAA,EAAD,KACE,kBAACH,GAAA,EAAD,KACE,kBAACrH,EAAA,EAAD,CAAYuG,cAAY,EAACtG,QAAQ,KAAKoG,UAAU,MAAhD,gBAGA,kBAACrG,EAAA,EAAD,CAAYC,QAAQ,QAAQlB,MAAM,gBAAgBsH,UAAU,KAA5D,eAKJ,kBAACiB,GAAA,EAAD,MACIhD,IAAY1C,GACZ,kBAACzB,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WAEzB,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,IAAIE,QAAS,kBAAM4F,MAApD,qCAKH5B,GACC,2BACE,8BAAOA,IAGV1C,GACC,qCACS,8BAAOA,OAMxB,kBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIC,GAAI,GACrB,kBAACE,GAAA,EAAD,CAAMhH,UAAWd,EAAQsG,MACvB,kBAAC8B,GAAA,EAAD,KACE,kBAACH,GAAA,EAAD,KACE,kBAACrH,EAAA,EAAD,CAAYuG,cAAY,EAACtG,QAAQ,KAAKoG,UAAU,MAAhD,mBAGA,kBAACrG,EAAA,EAAD,CAAYC,QAAQ,QAAQlB,MAAM,gBAAgBsH,UAAU,KAA5D,6BAIJ,kBAACiB,GAAA,EAAD,KACE,kBAACnH,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WACzB,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,UAAjC,uBAOR,kBAACqG,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIC,GAAI,GACrB,kBAACE,GAAA,EAAD,CAAMhH,UAAWd,EAAQsG,MACvB,kBAAC8B,GAAA,EAAD,KACE,kBAACH,GAAA,EAAD,KACE,kBAACrH,EAAA,EAAD,CAAYuG,cAAY,EAACtG,QAAQ,KAAKoG,UAAU,MAAhD,sBAGA,kBAACrG,EAAA,EAAD,CAAYC,QAAQ,QAAQlB,MAAM,gBAAgBsH,UAAU,KAA5D,8BAIJ,kBAACiB,GAAA,EAAD,KACE,kBAACnH,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WACzB,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,uBAAjC,uBAOR,kBAACqG,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,GAAIC,GAAI,GACrB,kBAACE,GAAA,EAAD,CAAMhH,UAAWd,EAAQsG,MACvB,kBAAC8B,GAAA,EAAD,KACE,kBAACH,GAAA,EAAD,KACE,kBAACrH,EAAA,EAAD,CAAYuG,cAAY,EAACtG,QAAQ,KAAKoG,UAAU,MAAhD,kBAGA,kBAACrG,EAAA,EAAD,CAAYC,QAAQ,QAAQlB,MAAM,gBAAgBsH,UAAU,KAA5D,0CAKJ,kBAACiB,GAAA,EAAD,KACGvK,IACC,kBAACoD,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WACzB,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,WAAjC,WAKA,oCACE,kBAACD,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WACzB,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,UAAjC,UAIF,kBAACD,EAAA,EAAD,CAAQoH,KAAK,QAAQxI,MAAM,WACzB,uBAAGmB,UAAWd,EAAQN,KAAMsB,KAAK,WAAjC,mB,sEC/NhBzB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4F,OAAQ,CACNA,OAAQ5F,EAAM6F,QAAQ,IAExBU,QAAS,CACPA,QAASvG,EAAM6F,QAAQ,IAEzB+C,OAAQ,CACNC,cAAe,QAEjBpC,UAAW,CACTA,UAAW,QAIFqC,GAAY,WACvB,IAAMvI,EAAUT,KACViJ,EAAUC,cAFa,EAGHtI,mBAAiB,IAHd,mBAGtBnC,EAHsB,KAGf0K,EAHe,OAIGvI,mBAAiB,IAJpB,mBAItBlC,EAJsB,KAIZ0K,EAJY,OAKHxI,mBAAiB,IALd,mBAKtBqC,EALsB,KAKfqE,EALe,KAOvB+B,EAAY,uCAAG,WAAOC,GAAP,SAAA3K,EAAA,6DACnB2I,EAAS,IADU,kBAGE9I,EAAMC,EAAOC,GAHf,eAMfuK,EAAQM,KAAK,KANE,gDASb,gBAAe1K,MAEjByI,EAAS,KAAI3B,SAGb2B,EAAS,EAAD,IAdO,yDAAH,sDAmBlB,OAAOlJ,IACL,kBAAC,IAAD,CAAUoL,GAAG,MAEb,kBAACC,GAAA,EAAD,CAAOlI,UAAWd,EAAQgG,SACxB,yBAAKlF,UAAWd,EAAQqF,QACtB,kBAACgC,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,EAAG2D,WAAW,YACrC,kBAAC5B,EAAA,EAAD,CAAMG,MAAI,GACR,kBAAC0B,GAAA,EAAD,OAEF,kBAAC7B,EAAA,EAAD,CAAMG,MAAI,EAACK,IAAI,EAAMD,IAAI,EAAMD,IAAI,GACjC,kBAAC,KAAD,CACErG,GAAG,QACH6H,MAAM,QACNC,KAAK,QACLC,MAAOrL,EACPsL,SAAU,SAACC,GAAD,OACRb,EAASa,EAAEnI,cAAciI,QAE3BG,WAAS,EACTC,WAAS,EACTC,UAAQ,MAId,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,EAAG2D,WAAW,YACrC,kBAAC5B,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACmC,GAAA,EAAD,OAEF,kBAACtC,EAAA,EAAD,CAAMG,MAAI,EAACK,IAAI,EAAMD,IAAI,EAAMD,IAAI,GACjC,kBAAC,KAAD,CACErG,GAAG,WACH6H,MAAM,WACNC,KAAK,WACLC,MAAOpL,EACPqL,SAAU,SAACC,GAAD,OACRZ,EAAYY,EAAEnI,cAAciI,QAE9BG,WAAS,EACTE,UAAQ,MAId,6BACA,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAC2B,WAAW,UACxBzG,GACC,kBAAC6E,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACoC,GAAA,EAAD,CAAOC,SAAS,SAASrH,KAI/B,kBAAC6E,EAAA,EAAD,CAAMC,WAAS,EAAC2B,WAAW,SAAS1B,QAAQ,iBAC1C,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACsC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUrK,MAAM,YACzBwJ,MAAM,iBAGV,kBAAC9B,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACzG,EAAA,EAAD,CACEkJ,oBAAkB,EAClBC,eAAa,EACbpJ,UAAWd,EAAQqI,OACnBxH,QAAQ,OACRlB,MAAM,WALR,uBAWJ,kBAAC0H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASzG,UAAWd,EAAQkG,WACjD,IACD,kBAACnF,EAAA,EAAD,CACEF,QAAQ,WACRlB,MAAM,UACNmB,UAAWd,EAAQqI,OACnBnH,QAAS,kBAAMsH,EAAQM,KAAK,aAJ9B,WAOU,IATZ,OAWE,kBAAC/H,EAAA,EAAD,CACEF,QAAQ,WACRlB,MAAM,UACNmB,UAAWd,EAAQqI,OACnBnH,QAAS0H,GAJX,aChIJrJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4F,OAAQ,CACNA,OAAQ5F,EAAM6F,QAAQ,IAExBU,QAAS,CACPA,QAASvG,EAAM6F,QAAQ,IAEzB+C,OAAQ,CACNC,cAAe,QAEjBpC,UAAW,CACTA,UAAW,QAIFiE,GAAa,WACxB,IAAMnK,EAAUT,KACViJ,EAAUC,cAFc,EAGJtI,mBAAiB,IAHb,mBAGvBnC,EAHuB,KAGhB0K,EAHgB,OAIEvI,mBAAiB,IAJnB,mBAIvBlC,EAJuB,KAIb0K,EAJa,OAK0BxI,mBAAiB,IAL3C,mBAKvBb,EALuB,KAKD8K,EALC,OAMJjK,mBAAiB,IANb,mBAMvBqC,EANuB,KAMhBqE,EANgB,KAQxB+B,EAAY,uCAAG,WAAOC,GAAP,SAAA3K,EAAA,yDAEfD,IAAaqB,EAFE,gBAEoBuH,EAAS,0BAF7B,8BAIjBA,EAAS,IAJQ,kBAMIxH,EAAOrB,EAAOC,EAAUqB,GAN5B,eASbkJ,EAAQM,KAAK,KATA,kDAYX,gBAAe1K,MAEjByI,EAAS,KAAI3B,SAGb2B,EAAS,EAAD,IAjBK,0DAAH,sDAuBlB,OAAOlJ,IACL,kBAAC,IAAD,CAAUoL,GAAG,MAEb,kBAACC,GAAA,EAAD,CAAOlI,UAAWd,EAAQgG,SACxB,yBAAKlF,UAAWd,EAAQqF,QACtB,kBAACgC,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,EAAG2D,WAAW,YACrC,kBAAC5B,EAAA,EAAD,CAAMG,MAAI,GACR,kBAAC0B,GAAA,EAAD,OAEF,kBAAC7B,EAAA,EAAD,CAAMG,MAAI,EAACK,IAAI,EAAMD,IAAI,EAAMD,IAAI,GACjC,kBAAC,KAAD,CACErG,GAAG,QACH6H,MAAM,QACNC,KAAK,QACLC,MAAOrL,EACPsL,SAAU,SAACC,GAAD,OACRb,EAASa,EAAEnI,cAAciI,QAE3BG,WAAS,EACTC,WAAS,EACTC,UAAQ,MAId,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,EAAG2D,WAAW,YACrC,kBAAC5B,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACmC,GAAA,EAAD,OAEF,kBAACtC,EAAA,EAAD,CAAMG,MAAI,EAACK,IAAI,EAAMD,IAAI,EAAMD,IAAI,GACjC,kBAAC,KAAD,CACErG,GAAG,WACH6H,MAAM,WACNC,KAAK,WACLC,MAAOpL,EACPqL,SAAU,SAACC,GAAD,OACRZ,EAAYY,EAAEnI,cAAciI,QAE9BG,WAAS,EACTE,UAAQ,MAId,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,EAAG2D,WAAW,YACrC,kBAAC5B,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACmC,GAAA,EAAD,OAEF,kBAACtC,EAAA,EAAD,CAAMG,MAAI,EAACK,IAAI,EAAMD,IAAI,EAAMD,IAAI,GACjC,kBAAC,KAAD,CACErG,GAAG,uBACH6H,MAAM,mBACNC,KAAK,WACLC,MAAO/J,EACPgK,SAAU,SAACC,GAAD,OACRa,EAAwBb,EAAEnI,cAAciI,QAE1CG,WAAS,EACTE,UAAQ,MAId,6BACA,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAC2B,WAAW,UACxBzG,GACC,kBAAC6E,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACoC,GAAA,EAAD,CAAOC,SAAS,SAASrH,KAI/B,kBAAC6E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASzG,UAAWd,EAAQkG,WAClD,kBAACnF,EAAA,EAAD,CACEF,QAAQ,WACRlB,MAAM,UACNmB,UAAWd,EAAQqI,OACnBnH,QAAS0H,GAJX,eCrHJrJ,GAAYC,aAAW,SAACC,GAAD,MAAY,MAI5B4K,GAAmB,WACZ9K,KAEhB,OACI,6BACI,oE,UCPC+K,GAAqC,SAAC,GAAD,IAChDrD,EADgD,EAChDA,UACGsD,EAF6C,qCAIhD,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC1H,GAAD,OACgB,IAAtBnF,IACEuC,IAAMuK,cAAcxD,EAAWnE,GAE/B,kBAAC,IAAD,CAAUiG,GAAG,gBCVR2B,GAAa,WACxB,IAAMlC,EAAUC,cAEhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkC,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SAAS1D,UAAWsB,KAChC,kBAAC,IAAD,CAAOoC,KAAK,UAAU1D,UAAWkD,KACjC,kBAAC,IAAD,CACEQ,KAAK,UACLH,OAAQ,WAGN,Od0FR3M,aAAauE,WAAW,SACxBvE,aAAauE,WAAW,ec5FhBoG,EAAQM,KAAK,KACN,QAGX,kBAAC,GAAD,CAAc6B,KAAK,sBAAsB1D,UAAWoD,KACpD,kBAAC,IAAD,CAAOO,OAAK,EAACD,KAAK,IAAI1D,UAAWN,OCrBjCpH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6H,UAAW,OAeEuD,GAVE,WACf,IAAM7K,EAAUT,KAEhB,OACE,kBAACwH,EAAA,EAAD,CAAWC,SAAS,KAAKlG,UAAWd,EAAQsH,WAC1C,kBAAC,GAAD,Q,4DCNA/H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqL,WAAY,CACRvF,MAAO,YAwDAwF,GAnDI,WACf,IAAM/K,EAAUT,KADK,GAEJ5B,IAESuC,IAAMC,SAAS,kBAJpB,mBAIdkJ,EAJc,KAIP2B,EAJO,KAUrB,OACI,oCACKrN,IACG,kBAACsN,GAAA,EAAD,CACInK,UAAWd,EAAQ8K,WACnBzB,MAAOA,EACPC,SAVhB,SAAsBnI,EAA8B+J,GAChDF,EAASE,IAUGC,YAAU,GAEV,kBAACC,GAAA,EAAD,CACInE,UAAWoE,KACXlC,MAAM,gBACNE,MAAM,gBACN5D,KAAM,kBAAC6F,GAAA,EAAD,QACV,kBAACF,GAAA,EAAD,CACInE,UAAWoE,KACXlC,MAAM,WACNE,MAAM,WACN5D,KAAM,kBAAC8F,GAAA,EAAD,QACV,kBAACH,GAAA,EAAD,CACInE,UAAWoE,KACXlC,MAAM,WACNE,MAAM,WACN5D,KAAM,kBAAC+F,GAAA,EAAD,SAId,kBAAC5K,EAAA,EAAD,CAAYC,QAAQ,QAAQlB,MAAM,gBAAgBuH,MAAM,UACvD,kBACD,kBAACmE,GAAA,EAAD,CAAM1L,MAAM,UAAUqB,KAAK,yBAA3B,gBAEQ,KACP,IAAIyK,MAAOC,cACX,OClDXnM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkM,IAAK,CACD7L,UAAW,SACXqF,QAAS,OACToB,cAAe,SACff,OAAQ,SAEZoG,OAAQ,CACJzG,QAAS,OACT8D,WAAY,UAEhBtK,KAAM,CACFwG,QAAS,OACTtF,SAAU,EACVgM,eAAgB,SAChBC,SAAU,sBAGdC,OAAQ,CACJ5G,QAAS,OACTzE,SAAU,SACVsL,OAAQ,OAsBDC,GAlBC,WACZ,IAAMjM,EAAUT,KAEhB,OACI,kBAAC2M,EAAA,EAAD,CAAKpL,UAAWd,EAAQ2L,KACpB,4BAAQ7K,UAAWd,EAAQ4L,QACvB,kBAAC,EAAD,OAEJ,0BAAM9K,UAAWd,EAAQrB,MACrB,kBAAC,GAAD,OAEJ,gCACI,kBAAC,GAAD,SC5ChBwN,IAAS3B,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEF4B,SAASC,eAAe,W","file":"static/js/main.7acc15e2.chunk.js","sourcesContent":["import decodeJwt from 'jwt-decode';\n\nexport const isAuthenticated = () => {\n  const permissions = localStorage.getItem('permissions');\n  if (!permissions) {\n    return false;\n  }\n  return permissions === 'user' || permissions === 'admin' ? true : false;\n};\n\n/**\n * Login to backend and store JSON web token on success\n *\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const login = async (email: string, password: string) => {\n  // Assert email or password is not empty\n  if (!(email.length > 0) || !(password.length > 0)) {\n    throw new Error('Email or password was not provided');\n  }\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/token', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\n/**\n * Sign up via backend and store JSON web token on success\n *\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const signUp = async (\n  email: string,\n  password: string,\n  passwordConfirmation: string\n) => {\n  // Assert email or password or password confirmation is not empty\n  if (!(email.length > 0)) {\n    throw new Error('Email was not provided');\n  }\n  if (!(password.length > 0)) {\n    throw new Error('Password was not provided');\n  }\n  if (!(passwordConfirmation.length > 0)) {\n    throw new Error('Password confirmation was not provided');\n  }\n\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/signup', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('permissions');\n};\n","import React, { FC } from 'react';\n//import { Switch, Route } from 'react-router-dom';\n//import { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { logout, isAuthenticated } from '../utils/auth';\n\nimport Link from '@material-ui/core/Link'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: \"white\",\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: \"left\",\n    },\n}));\n\nconst Header: FC = () => {\n    const classes = useStyles();\n    const loggedIn = isAuthenticated();\n\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAuth(event.target.checked);\n    };\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography\n                    variant=\"h6\"\n                    className={classes.title}\n                // component={Link}\n                // to=\"/\"\n                >\n                    Kalamos Care\n        </Typography>\n                {!loggedIn && (\n                    <>\n                        <Button color=\"inherit\">\n                            <a className={classes.link} href=\"/login\">\n                                Login\n                            </a>\n                        </Button>\n                        <Button color=\"inherit\">\n                            <a className={classes.link} href=\"/signup\">\n                                Sign Up\n                            </a>\n                        </Button>\n                    </>\n                )}\n                {loggedIn && (\n                    <div>\n                        <IconButton\n                            // aria-label=\"account of current user\"\n                            // aria-controls=\"menu-appbar\"\n                            // aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\n                            <MenuItem onClick={handleClose}>My account</MenuItem>\n                        </Menu>\n                    </div>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header","import decodeJwt from 'jwt-decode';\n\ntype loginFormType = {\n  username: string;\n  password: string;\n};\n\nconst authProvider = {\n  login: ({ username, password }: loginFormType) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData,\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        const decodedToken: any = decodeJwt(access_token);\n        if (decodedToken.permissions !== 'admin') {\n          throw new Error('Forbidden');\n        }\n        localStorage.setItem('token', access_token);\n        localStorage.setItem('permissions', decodedToken.permissions);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: (error: { status: number }) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  },\n};\n\nexport default authProvider;\n","import React, { FC } from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n} from 'react-admin';\n\nexport const UserEdit: FC = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n      <BooleanInput source=\"is_active\" />\n      <BooleanInput source=\"is_superuser\" />\n    </SimpleForm>\n  </Edit>\n);\n","// in src/users.js\nimport React, { FC } from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  BooleanField,\n  EmailField,\n  EditButton,\n} from 'react-admin';\n\nexport const UserList: FC = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <EmailField source=\"email\" />\n      <TextField source=\"first_name\" />\n      <TextField source=\"last_name\" />\n      <BooleanField source=\"is_active\" />\n      <BooleanField source=\"is_superuser\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n","import React, { FC } from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n} from 'react-admin';\n\nexport const UserCreate: FC = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n      <BooleanInput source=\"is_superuser\" />\n      <BooleanInput source=\"is_active\" />\n    </SimpleForm>\n  </Create>\n);\n","import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\n\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'user') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n          />\n        ) : null,\n      ]}\n    </ReactAdmin>\n  );\n};\n","import { BACKEND_URL } from '../config';\n\nexport const getMessage = async () => {\n  const response = await fetch(BACKEND_URL);\n\n  const data = await response.json();\n\n  if (data.message) {\n    return data.message;\n  }\n\n  return Promise.reject('Failed to get message from backend');\n};\n","export const BASE_URL: string = 'http://localhost:8000';\nexport const BACKEND_URL: string =\n  'http://localhost:8000/api/v1';\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMessage } from '../utils/api';\nimport { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: '#ff6e6c',\n  },\n  body: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\nexport const Home: FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const classes = useStyles();\n\n  const queryBackend = async () => {\n    try {\n      const message = await getMessage();\n      setMessage(message);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return (\n    <>\n         <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Remote PrEP Patient Monitoring made easy.\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Let us automate the logistics of PrEP prescribing, from testing to medication delivery to adherenece monitoring.\n              <br />\n              You focus on building a strong personal relationship with your patients.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Create Your Account\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Read More About Us\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      <Container className={classes.body}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Ping Backend\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Click me!\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              {!message && !error && (\n                <Button size=\"small\" color=\"primary\">\n\n                  <a className={classes.link} href=\"#\" onClick={() => queryBackend()}>\n                    Click to make request to backend\n                    </a>\n                </Button>\n              )}\n              {message && (\n                <p>\n                  <code>{message}</code>\n                </p>\n              )}\n              {error && (\n                <p>\n                  Error: <code>{error}</code>\n                </p>\n              )}\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Admin Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor app users/usage</Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                <a className={classes.link} href=\"/admin\">\n                  Admin Dashboard\n          </a>\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Provider Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor your Patients!!!</Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                <a className={classes.link} href=\"/provider-dashboard\">\n                  Protected Route\n      </a>\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Authentication\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Test the API's authentication below!\n    </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              {isAuthenticated() ? (\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/logout\">\n                    Logout\n                </a>\n                </Button>\n              ) : (\n                  <>\n                    <Button size=\"small\" color=\"primary\">\n                      <a className={classes.link} href=\"/login\">\n                        Login\n          </a>\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      <a className={classes.link} href=\"/signup\">\n                        Sign Up\n          </a>\n                    </Button>\n                  </>\n                )}\n            </CardActions>\n          </Card>\n        </Grid>\n      </Container>\n    </>\n  );\n};","import React, { FC, useState } from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { login, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const Login: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    setError('');\n    try {\n      const data = await login(email, password);\n\n      if (data) {\n        history.push('/');\n      }\n    } catch (err) {\n      if (err instanceof Error) {\n        // handle errors thrown from frontend\n        setError(err.message);\n      } else {\n        // handle errors thrown from backend\n        setError(err);\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              disableFocusRipple\n              disableRipple\n              className={classes.button}\n              variant=\"text\"\n              color=\"primary\"\n            >\n              Forgot password ?\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          {' '}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => history.push('/signup')}\n          >\n            Sign Up\n          </Button>{' '}\n          &nbsp;\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Login\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { Paper, Grid, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { signUp, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const SignUp: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    // Password confirmation validation\n    if (password !== passwordConfirmation) setError('Passwords do not match');\n    else {\n      setError('');\n      try {\n        const data = await signUp(email, password, passwordConfirmation);\n\n        if (data) {\n          history.push('/');\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          // handle errors thrown from frontend\n          setError(err.message);\n        } else {\n          // handle errors thrown from backend\n          setError(err);\n        }\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"passwordConfirmation\"\n              label=\"Confirm password\"\n              type=\"password\"\n              value={passwordConfirmation}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPasswordConfirmation(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import Header from '../layout/Header';\n// import Footer from '../layout/Footer';\n// import Body from '../layout/Body';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport const ProviderDash: FC = () => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <h1>Put app from provider portal here!</h1>\n        </div>\n    );\n};\n\n// export default Protected","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../utils/auth';\n\ntype PrivateRouteType = {\n  component: React.ComponentType<any>;\n  path?: string | string[];\n};\n\nexport const PrivateRoute: FC<PrivateRouteType> = ({\n  component,\n  ...rest\n}: any) => (\n  <Route\n    {...rest}\n    render={(props: any) =>\n      isAuthenticated() === true ? (\n        React.createElement(component, props)\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n\nimport { Admin } from './admin';\nimport { Home, Login, SignUp, ProviderDash, PrivateRoute } from './views';\nimport { logout, isAuthenticated } from './utils/auth';\n\nexport const Routes: FC = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/admin\">\n        <Admin />\n      </Route>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          history.push('/');\n          return null;\n        }}\n      />\n      <PrivateRoute path=\"/provider-dashboard\" component={ProviderDash} />\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  );\n};","import React, { FC } from 'react';\n// import { Switch, Route } from 'react-router-dom';\nimport { Routes } from '../Routes';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container';\n// import Paper from '@material-ui/core/Paper'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n\n  }\n}));\n\nconst Body: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <Routes />\n    </Container>\n  );\n};\n\nexport default Body","import React, { FC, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n//import { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { logout, isAuthenticated } from '../utils/auth';\n\nimport {\n    Link, BottomNavigation, BottomNavigationAction, Typography\n} from '@material-ui/core/'\nimport {\n    Chat, Folder, Notifications\n} from '@material-ui/icons/';\n\nconst useStyles = makeStyles((theme) => ({\n    bottom_nav: {\n        width: '100%',\n    }\n}));\n\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n    const loggedIn = isAuthenticated();\n\n    const [value, setValue] = React.useState('notifications');\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\n        setValue(newValue);\n    }\n\n    return (\n        <>\n            {isAuthenticated() ? (\n                <BottomNavigation\n                    className={classes.bottom_nav}\n                    value={value}\n                    onChange={handleChange}\n                    showLabels\n                >\n                    <BottomNavigationAction\n                        component={Link}\n                        label=\"Notifications\"\n                        value=\"notifications\"\n                        icon={<Notifications />} />\n                    <BottomNavigationAction\n                        component={Link}\n                        label=\"Patients\"\n                        value=\"patients\"\n                        icon={<Folder />} />\n                    <BottomNavigationAction\n                        component={Link}\n                        label=\"Messages\"\n                        value=\"messages\"\n                        icon={<Chat />} />\n\n                </BottomNavigation>\n            ) : (\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                <Link color=\"inherit\" href=\"https://kalamos.care/\">\n                    Kalamos Care\n                </Link>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n                )\n            }\n        </>\n    );\n};\n\nexport default Footer","import React, { FC } from 'react';\nimport { Routes } from './Routes';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport MuiLink from '@material-ui/core/Link';\n\nimport { isAuthenticated } from './utils/auth';\n\nimport Header from './layout/Header';\nimport Body from './layout/Body';\nimport Footer from './layout/Footer'\n\nconst useStyles = makeStyles((theme) => ({\n    app: {\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    body: {\n        display: 'flex',\n        flexGrow: 1,\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        //color: 'white',\n    },\n    footer: {\n        display: 'flex',\n        position: 'sticky',\n        bottom: 0,\n    },\n}));\n\nconst App: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.app}>\n            <header className={classes.header}>\n                <Header />\n            </header>\n            <body className={classes.body}>\n                <Body />\n            </body>\n            <footer>\n                <Footer />\n            </footer>\n        </Box>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}