{"version":3,"sources":["admin/authProvider.ts","admin/Users/UserEdit.tsx","admin/Users/UserList.tsx","admin/Users/UserCreate.tsx","admin/Admin.tsx","marketing/layout/Header.tsx","utils/api.ts","config/index.tsx","marketing/LandingPage.tsx","marketing/layout/Footer.tsx","marketing/Home.tsx","utils/auth.ts","marketing/Login.tsx","marketing/SignUp.tsx","marketing/AboutUs.tsx","clinic-app/Dashboard.tsx","PrivateRoute.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["authProvider","login","username","password","formData","FormData","append","request","Request","method","body","fetch","then","response","status","Error","statusText","json","access_token","decodedToken","decodeJwt","permissions","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","error","reject","checkAuth","getItem","getPermissions","role","UserEdit","props","Edit","SimpleForm","TextInput","disabled","source","PasswordInput","BooleanInput","UserList","List","Datagrid","rowClick","TextField","EmailField","BooleanField","EditButton","UserCreate","Create","dataProvider","simpleRestProvider","url","options","headers","Headers","Accept","token","set","fetchUtils","fetchJson","Admin","Resource","name","list","edit","create","useStyles","makeStyles","theme","header","display","alignItems","title","flexGrow","textAlign","Header","classes","AppBar","position","Toolbar","Typography","variant","className","ButtonGroup","color","Button","href","getMessage","a","data","message","link","flexWrap","margin","spacing","width","height","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","LandingPage","useState","setMessage","setError","queryBackend","Container","maxWidth","component","align","gutterBottom","paragraph","Grid","container","justify","item","xs","sm","md","Card","CardMedia","image","CardContent","CardActions","size","onClick","ul","listStyle","footer","borderTop","divider","breakpoints","up","copyright","Copyright","Link","Date","getFullYear","footers","description","Footer","map","key","Box","mt","marketing","main","justifyContent","fontSize","Home","children","isAuthenticated","email","length","detail","signUp","passwordConfirmation","button","textTransform","Login","history","useHistory","setEmail","setPassword","handleSubmit","_","push","to","Paper","Face","id","label","type","value","onChange","e","currentTarget","fullWidth","autoFocus","required","Fingerprint","Alert","severity","FormControlLabel","control","Checkbox","disableFocusRipple","disableRipple","SignUp","setPasswordConfirmation","app","bottom","bottom_nav","Dashboard","React","anchorEl","setAnchorEl","open","Boolean","handleAppBarMenuClose","setValue","IconButton","event","AccountCircle","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","BottomNavigation","newValue","showLabels","BottomNavigationAction","Notifications","Folder","Chat","PrivateRoute","rest","render","createElement","Routes","path","exact","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74dd56ac.chunk.js","sourcesContent":["import decodeJwt from 'jwt-decode';\n\ntype loginFormType = {\n  username: string;\n  password: string;\n};\n\nconst authProvider = {\n  login: ({ username, password }: loginFormType) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData,\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        const decodedToken: any = decodeJwt(access_token);\n        if (decodedToken.permissions !== 'admin') {\n          throw new Error('Forbidden');\n        }\n        localStorage.setItem('token', access_token);\n        localStorage.setItem('permissions', decodedToken.permissions);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: (error: { status: number }) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  },\n};\n\nexport default authProvider;\n","import React, { FC } from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n} from 'react-admin';\n\nexport const UserEdit: FC = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n      <BooleanInput source=\"is_active\" />\n      <BooleanInput source=\"is_provider\" />\n      <BooleanInput source=\"is_superuser\" />\n    </SimpleForm>\n  </Edit>\n);\n","// in src/users.js\nimport React, { FC } from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  BooleanField,\n  EmailField,\n  EditButton,\n} from 'react-admin';\n\nexport const UserList: FC = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <EmailField source=\"email\" />\n      <TextField source=\"first_name\" />\n      <TextField source=\"last_name\" />\n      <BooleanField source=\"is_active\" />\n      <BooleanField source=\"is_provider\" />\n      <BooleanField source=\"is_superuser\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n","import React, { FC } from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n} from 'react-admin';\n\nexport const UserCreate: FC = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n      <BooleanInput source=\"is_provider\" />\n      <BooleanInput source=\"is_superuser\" />\n      <BooleanInput source=\"is_active\" />\n    </SimpleForm>\n  </Create>\n);\n","import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\n\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'user') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n          />\n        ) : null,\n      ]}\n    </ReactAdmin>\n  );\n};\n","import React, { FC, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n    title: {\n        flexGrow: 1,\n        textAlign: \"left\",\n      },\n}));\n\n\nconst Header: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              className={classes.title}\n            // component={Link}\n            // to=\"/\"\n            >\n              Kalamos Care\n        </Typography>\n            <ButtonGroup color=\"inherit\">\n              <Button href=\"/login\">\n                Login\n            </Button>\n              <Button href=\"/signup\">\n                Sign Up\n            </Button>\n            </ButtonGroup>\n          </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;","import { BACKEND_URL } from '../config';\n\nexport const getMessage = async () => {\n  const response = await fetch(BACKEND_URL);\n\n  const data = await response.json();\n\n  if (data.message) {\n    return data.message;\n  }\n\n  return Promise.reject('Failed to get message from backend');\n};\n\nexport const getUserInfo = async () => {\n  const response = await fetch(BACKEND_URL+\"/users/me\");\n\n  const data = await response.json();\n\n  if (data.message) {\n    return data.message;\n  }\n\n  return Promise.reject('Failed to get message from backend');\n}","export const BASE_URL: string = 'http://localhost:8000';\nexport const BACKEND_URL: string =\n  'http://localhost:8000/api/v1';\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMessage } from '../utils/api';\n// import { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: '#ff6e6c',\n  },\n  body: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nconst LandingPage: FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const classes = useStyles();\n\n  const queryBackend = async () => {\n    try {\n      const message = await getMessage();\n      setMessage(message);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return (\n    <main>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Remote PrEP Patient Monitoring\n            </Typography>\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Let us automate the logistics of PrEP prescribing, from testing to medication delivery to adherenece monitoring.\n              <br /><br />\n              You focus on building strong personal relationships with your patients.\n            </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" href=\"/signup\">\n                    Create Your Account\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"outlined\" color=\"primary\" href=\"/aboutus\">\n                    Read More About Us\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">Ping Backend</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Click me!</Typography>\n              </CardContent>\n              <CardActions>\n                {!message && !error && (\n                  <Button size=\"small\" color=\"primary\">\n\n                    <a className={classes.link} href=\"#\" onClick={() => queryBackend()}>\n                      Call the backend\n                    </a>\n                  </Button>\n                )}\n                {message && (\n                  <p>\n                    <code>{message}</code>\n                  </p>\n                )}\n                {error && (\n                  <p>\n                    Error: <code>{error}</code>\n                  </p>\n                )}\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Admin Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor app users/usage</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/admin\">\n                    Admin Dashboard\n          </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Provider Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor your Patients!!!</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/clinic\">\n                    Protected Route\n      </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </main>\n  );\n};\n\nexport default LandingPage;","import React, { FC, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up('sm')]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n    copyright: {\n        alignItems: 'center',\n        width: '100%',\n    },\n}));\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://kalamos.care/\">\n                Kalamos Care\n        </Link>\n            {' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n};\n\n\nconst footers = [\n    {\n        title: 'Company',\n        description: ['Team', 'History', 'Contact us', 'Locations'],\n    },\n    {\n        title: 'Features',\n        description: ['Cool stuff', 'Random feature', 'Team feature', 'Developer stuff', 'Another one'],\n    },\n    {\n        title: 'Resources',\n        description: ['Resource', 'Resource name', 'Another resource', 'Final resource'],\n    },\n    {\n        title: 'Legal',\n        description: ['Privacy policy', 'Terms of use'],\n    },\n];\n\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n            <Grid container spacing={4} justify=\"space-evenly\">\n                {footers.map((footer) => (\n                    <Grid item xs={6} sm={3} key={footer.title}>\n                        <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                            {footer.title}\n                        </Typography>\n                        <ul>\n                            {footer.description.map((item) => (\n                                <li key={item}>\n                                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                                        {item}\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </Grid>\n                ))}\n            </Grid>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n};\n\nexport default Footer;","import React, { FC, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\n\nimport Header from './layout/Header';\nimport LandingPage from './LandingPage';\nimport Footer from './layout/Footer';\n\n\n// import { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  marketing: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'flex',\n    flexGrow: 1,\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    //color: 'white',\n  },\n}));\n\n\nexport const Home: FC = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.marketing}>\n      <header className={classes.header}>\n        <Header />\n      </header>\n      <main className={classes.main}>\n        <LandingPage />\n        {children}\n      </main>\n      <footer>\n        <Footer />\n      </footer>\n    </Box>\n  );\n};","import decodeJwt from 'jwt-decode';\n\nexport const isAuthenticated = () => {\n  const permissions = localStorage.getItem('permissions');\n  if (!permissions) {\n    return false;\n  }\n  return permissions === 'user' || permissions === 'provider' || permissions === 'admin' ? true : false;\n};\n\n/**\n * Login to backend and store JSON web token on success\n *\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const login = async (email: string, password: string) => {\n  // Assert email or password is not empty\n  if (!(email.length > 0) || !(password.length > 0)) {\n    throw new Error('Email or password was not provided');\n  }\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/token', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\n/**\n * Sign up via backend and store JSON web token on success\n *\n * @param firstName\n * @param lastName\n * @param NPI\n * @param stateLicenses\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const signUp = async (\n  email: string,\n  password: string,\n  passwordConfirmation: string\n) => {\n  // Assert email or password or password confirmation is not empty\n  if (!(email.length > 0)) {\n    throw new Error('Email was not provided');\n  }\n  if (!(password.length > 0)) {\n    throw new Error('Password was not provided');\n  }\n  if (!(passwordConfirmation.length > 0)) {\n    throw new Error('Password confirmation was not provided');\n  }\n\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/signup', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\n\n/**\n * Add provider registration needs here\n */\nexport const mtlRegister = async (\n  email: string,\n  firstName: string,\n  lastName: string,\n  NPI: string,\n  stateLicenses: Array<string>,\n) => {\n  // Error checking\n  if (!(email.length > 0)) {\n    throw new Error('Email was not provided');\n  }\n  if (!(firstName.length > 0)) {\n    throw new Error('First name was not provided');\n  }\n  if (!(lastName.length > 0)) {\n    throw new Error('Last name was not provided');\n  }\n  if (!(NPI.length > 0)) {\n    throw new Error('NPI was not provided');\n  }\n  if (!(stateLicenses.length > 0)) {\n    throw new Error('State licensese were not provided');\n  }\n\n  const request = new Request('/api/register_provider', {\n\n  });\n\n};\n\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('permissions');\n};\n","import React, { FC, useState } from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { login, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const Login: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    setError('');\n    try {\n      const data = await login(email, password);\n\n      if (data) {\n        history.push('/clinic');\n      }\n    } catch (err) {\n      if (err instanceof Error) {\n        // handle errors thrown from frontend\n        setError(err.message);\n      } else {\n        // handle errors thrown from backend\n        setError(err);\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              disableFocusRipple\n              disableRipple\n              className={classes.button}\n              variant=\"text\"\n              color=\"primary\"\n            >\n              Forgot password ?\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          {' '}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => history.push('/signup')}\n          >\n            Sign Up\n          </Button>{' '}\n          &nbsp;\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Login\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { Paper, Grid, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { signUp, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const SignUp: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    // Password confirmation validation\n    if (password !== passwordConfirmation) setError('Passwords do not match');\n    else {\n      setError('');\n      try {\n        const data = await signUp(email, password, passwordConfirmation);\n\n        if (data) {\n          history.push('/');\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          // handle errors thrown from frontend\n          setError(err.message);\n        } else {\n          // handle errors thrown from backend\n          setError(err);\n        }\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"passwordConfirmation\"\n              label=\"Confirm password\"\n              type=\"password\"\n              value={passwordConfirmation}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPasswordConfirmation(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMessage } from '../utils/api';\n// import { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: '#ff6e6c',\n  },\n  body: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport const AboutUs: FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const classes = useStyles();\n\n  const queryBackend = async () => {\n    try {\n      const message = await getMessage();\n      setMessage(message);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return (\n    <main>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            About Us\n            </Typography>\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Put our story here!\n            </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\">\n                  Create Your Account\n                  </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"outlined\" color=\"primary\">\n                  Read More About Us\n                  </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">Ping Backend</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Click me!</Typography>\n              </CardContent>\n              <CardActions>\n                {!message && !error && (\n                  <Button size=\"small\" color=\"primary\">\n\n                    <a className={classes.link} href=\"#\" onClick={() => queryBackend()}>\n                      Click to make request to backend\n                    </a>\n                  </Button>\n                )}\n                {message && (\n                  <p>\n                    <code>{message}</code>\n                  </p>\n                )}\n                {error && (\n                  <p>\n                    Error: <code>{error}</code>\n                  </p>\n                )}\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Admin Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor app users/usage</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/admin\">\n                    Admin Dashboard\n          </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Provider Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor your Patients!!!</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/provider-dashboard\">\n                    Protected Route\n      </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </main>\n  );\n};","import React, { FC } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  AppBar, BottomNavigation, BottomNavigationAction, Box, Container, IconButton, Link, Menu, MenuItem, Toolbar, Typography\n} from '@material-ui/core/';\nimport {\n  AccountCircle, Chat, Folder, Notifications\n} from '@material-ui/icons/';\n\n//import Notifications from './Notifications';\n//import Patients, PatientDetail from './Patients';\n\n// import Header from './layout/Header';\n// import Main from './layout/Main';\n// import Footer from './layout/Footer';\n\n{/*\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <div>\n      <h3>ID: {id}</h3>\n    </div>\n  );\n};\n*/}\n\n\n{/*\nconst routes = [\n  {\n    path: \"/clinic/notifications\",\n    component: Notifications,\n  },\n  {\n    path: \"/clinic/patients\",\n    component: Patients,\n    routes: [\n      {\n        path: \"/patients/{patient_id}\",\n        component: PatientDetail,\n      }\n    ]\n  }\n];\n*/}\n\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'flex',\n    flexGrow: 1,\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    //color: 'white',\n  },\n  footer: {\n    display: 'flex',\n    position: 'sticky',\n    bottom: 0,\n  },\n  bottom_nav: {\n    width: '100%',\n  },\n  copyright: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\",\n  },\n}));\n\n\nexport const Dashboard: FC = ({ children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [auth, setAuth] = React.useState(true);\n\n  // I think this is meant to log the user out?\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAuth(event.target.checked);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleAppBarMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleAppBarMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Bottom Nav state management (I think)\n  const [value, setValue] = React.useState('notifications');\n\n  function handleBottomNavChange(event: React.ChangeEvent<{}>, newValue: string) {\n    setValue(newValue);\n  }\n\n  return (\n    <Box className={classes.app}>\n      <header className={classes.header}>\n        {/**<Header />**/}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              className={classes.title}\n            // component={Link}\n            // to=\"/\"\n            >\n              Kalamos Care\n                </Typography>\n            <IconButton\n              // aria-label=\"account of current user\"\n              // aria-controls=\"menu-appbar\"\n              // aria-haspopup=\"true\"\n              onClick={handleAppBarMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleAppBarMenuClose}\n            >\n              <MenuItem onClick={handleAppBarMenuClose}>\n                <a href=\"/clinic/settings\">\n                  Settings\n                            </a>\n              </MenuItem>\n              <MenuItem onClick={handleAppBarMenuClose}>\n                <a href=\"/logout\">\n                  Logout\n                            </a>\n              </MenuItem>\n            </Menu>\n          </Toolbar>\n        </AppBar>\n      </header>\n        <main className={classes.main}>\n          <Container>\n            {/*<Switch>\n              <Route path=\"/:id\" children={<Child />} />\n            </Switch>*/}\n          </Container>\n        </main>\n        <footer className={classes.footer}>\n          {/**<Footer />**/}\n          <BottomNavigation\n            className={classes.bottom_nav}\n            value={value}\n            onChange={handleBottomNavChange}\n            showLabels\n          >\n            <BottomNavigationAction\n              component={Link}\n              //to=\"/notifications\"\n              //onClick={changeMainItem&URL}\n              label=\"Notifications\"\n              value=\"notifications\"\n              icon={<Notifications />} />\n            <BottomNavigationAction\n              component={Link}\n              //to=\"/Patients\"\n              //onClick={changeMainItem&URL}\n              label=\"Patients\"\n              value=\"patients\"\n              icon={<Folder />} />\n            <BottomNavigationAction\n              component={Link}\n              //to=\"Messages\"\n              //onClick={changeMainItem&URL}\n              label=\"Messages\"\n              value=\"messages\"\n              icon={<Chat />} />\n          </BottomNavigation>\n        </footer>\n    </Box>\n  );\n};","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from './utils/auth';\n\ntype PrivateRouteType = {\n  component: React.ComponentType<any>;\n  path?: string | string[];\n};\n\nexport const PrivateRoute: FC<PrivateRouteType> = ({\n  component,\n  ...rest\n}: any) => (\n  <Route\n    {...rest}\n    render={(props: any) =>\n      isAuthenticated() === true ? (\n        React.createElement(component, props)\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { Admin } from './admin';\nimport { Home, Login, SignUp } from './marketing';\nimport { Dashboard } from './clinic-app';\nimport { PrivateRoute } from './PrivateRoute';\nimport { logout } from './utils/auth';\n\nexport const Routes: FC = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/admin\">\n        <Admin />\n      </Route>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          history.push('/');\n          return null;\n        }}\n      />\n      <PrivateRoute path=\"/clinic\" component={Dashboard} />\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  );\n};","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { Routes } from './Routes';\n\n// Should I check for authentication here and route the user accordingly?\n// import { isAuthenticated } from './utils/auth';\n\n\nconst App: FC = () => {\n    {/**\n        If logged in - see the clinic view\n        If not logged in - see the marketing view\n        Must manually navigate to admin to login\n    **/}\n\n    return (\n        <Routes />\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}