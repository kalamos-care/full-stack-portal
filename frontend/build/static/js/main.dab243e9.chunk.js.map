{"version":3,"sources":["admin/authProvider.ts","admin/Users/UserEdit.tsx","admin/Users/UserList.tsx","admin/Users/UserCreate.tsx","admin/Admin.tsx","utils/api.ts","config/index.tsx","marketing/LandingPage.tsx","marketing/Home.tsx","utils/auth.ts","marketing/Login.tsx","marketing/SignUp.tsx","marketing/AboutUs.tsx","clinic/PrivateRoute.tsx","clinic/ProviderDash.tsx","Routes.tsx","clinic/UserSettings.tsx","clinic/Notifications.tsx","clinic/Messages.tsx","clinic/Patients.tsx","App.tsx","index.tsx"],"names":["authProvider","login","username","password","formData","FormData","append","request","Request","method","body","fetch","then","response","status","Error","statusText","json","access_token","decodedToken","decodeJwt","permissions","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","error","reject","checkAuth","getItem","getPermissions","role","UserEdit","props","Edit","SimpleForm","TextInput","disabled","source","PasswordInput","BooleanInput","UserList","List","Datagrid","rowClick","TextField","EmailField","BooleanField","EditButton","UserCreate","Create","dataProvider","simpleRestProvider","url","options","headers","Headers","Accept","token","set","fetchUtils","fetchJson","Admin","Resource","name","list","edit","create","getMessage","a","data","message","useStyles","makeStyles","theme","link","color","display","flexWrap","margin","spacing","width","height","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","flexGrow","LandingPage","useState","setMessage","setError","classes","queryBackend","className","Container","maxWidth","Typography","component","variant","align","gutterBottom","paragraph","Grid","container","justify","item","Button","href","xs","sm","md","Card","CardMedia","image","title","CardContent","CardActions","size","onClick","marketing","textAlign","header","alignItems","main","justifyContent","fontSize","footer","position","bottom","copyright","Home","Box","AppBar","Toolbar","Link","Date","getFullYear","isAuthenticated","email","length","detail","signUp","passwordConfirmation","button","textTransform","Login","history","useHistory","setEmail","setPassword","handleSubmit","_","push","to","Paper","Face","id","label","type","value","onChange","e","currentTarget","fullWidth","autoFocus","required","Fingerprint","Alert","severity","FormControlLabel","control","Checkbox","disableFocusRipple","disableRipple","SignUp","setPasswordConfirmation","PrivateRoute","rest","render","React","createElement","ProviderDash","children","Routes","path","exact","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dab243e9.chunk.js","sourcesContent":["import decodeJwt from 'jwt-decode';\n\ntype loginFormType = {\n  username: string;\n  password: string;\n};\n\nconst authProvider = {\n  login: ({ username, password }: loginFormType) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData,\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        const decodedToken: any = decodeJwt(access_token);\n        if (decodedToken.permissions !== 'admin') {\n          throw new Error('Forbidden');\n        }\n        localStorage.setItem('token', access_token);\n        localStorage.setItem('permissions', decodedToken.permissions);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: (error: { status: number }) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  },\n};\n\nexport default authProvider;\n","import React, { FC } from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n} from 'react-admin';\n\nexport const UserEdit: FC = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n      <BooleanInput source=\"is_active\" />\n      <BooleanInput source=\"is_superuser\" />\n    </SimpleForm>\n  </Edit>\n);\n","// in src/users.js\nimport React, { FC } from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  BooleanField,\n  EmailField,\n  EditButton,\n} from 'react-admin';\n\nexport const UserList: FC = (props) => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <EmailField source=\"email\" />\n      <TextField source=\"first_name\" />\n      <TextField source=\"last_name\" />\n      <BooleanField source=\"is_active\" />\n      <BooleanField source=\"is_superuser\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n","import React, { FC } from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n} from 'react-admin';\n\nexport const UserCreate: FC = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n      <BooleanInput source=\"is_superuser\" />\n      <BooleanInput source=\"is_active\" />\n    </SimpleForm>\n  </Create>\n);\n","import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\n\nimport { UserList, UserEdit, UserCreate } from './Users';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider('api/v1', httpClient);\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'user') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n          />\n        ) : null,\n      ]}\n    </ReactAdmin>\n  );\n};\n","import { BACKEND_URL } from '../config';\n\nexport const getMessage = async () => {\n  const response = await fetch(BACKEND_URL);\n\n  const data = await response.json();\n\n  if (data.message) {\n    return data.message;\n  }\n\n  return Promise.reject('Failed to get message from backend');\n};\n\nexport const getUserInfo = async () => {\n  const response = await fetch(BACKEND_URL+\"/users/me\");\n\n  const data = await response.json();\n\n  if (data.message) {\n    return data.message;\n  }\n\n  return Promise.reject('Failed to get message from backend');\n}","export const BASE_URL: string = 'http://localhost:8000';\nexport const BACKEND_URL: string =\n  'http://localhost:8000/api/v1';\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMessage } from '../utils/api';\n// import { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: '#ff6e6c',\n  },\n  body: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nconst LandingPage: FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const classes = useStyles();\n\n  const queryBackend = async () => {\n    try {\n      const message = await getMessage();\n      setMessage(message);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return (\n    <main>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Remote PrEP Patient Monitoring\n            </Typography>\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Let us automate the logistics of PrEP prescribing, from testing to medication delivery to adherenece monitoring.\n              <br /><br />\n              You focus on building strong personal relationships with your patients.\n            </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\">\n                  <a className={classes.link} href=\"/signup\">\n                    Create Your Account\n                  </a>\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"outlined\" color=\"primary\">\n                  <a className={classes.link} href=\"/aboutus\">\n                    Read More About Us\n                  </a>\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">Ping Backend</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Click me!</Typography>\n              </CardContent>\n              <CardActions>\n                {!message && !error && (\n                  <Button size=\"small\" color=\"primary\">\n\n                    <a className={classes.link} href=\"#\" onClick={() => queryBackend()}>\n                      Click to make request to backend\n                    </a>\n                  </Button>\n                )}\n                {message && (\n                  <p>\n                    <code>{message}</code>\n                  </p>\n                )}\n                {error && (\n                  <p>\n                    Error: <code>{error}</code>\n                  </p>\n                )}\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Admin Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor app users/usage</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/admin\">\n                    Admin Dashboard\n          </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random\"\n                title=\"Image title\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Provider Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor your Patients!!!</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/provider-dashboard\">\n                    Protected Route\n      </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </main>\n  );\n};\n\nexport default LandingPage;","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n// import Container from '@material-ui/core/Container';\n// import Grid from '@material-ui/core/Grid';\n// import Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport LandingPage from './LandingPage'\n\n\n// import { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  marketing: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'flex',\n    flexGrow: 1,\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    //color: 'white',\n  },\n  footer: {\n    display: 'flex',\n    position: 'sticky',\n    bottom: 0,\n  },\n  copyright: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"left\",\n  },\n}));\n\n\nexport const Home: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.marketing}>\n      <header className={classes.header}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              className={classes.title}\n            // component={Link}\n            // to=\"/\"\n            >\n              Kalamos Care\n        </Typography>\n            <Button color=\"inherit\">\n              <a href=\"/login\">\n                Login\n                            </a>\n            </Button>\n            <Button color=\"inherit\">\n              <a href=\"/signup\">\n                Sign Up\n                            </a>\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </header>\n      <main className={classes.main}>\n        <LandingPage />\n      </main>\n      <footer className={classes.footer}>\n        <Box className={classes.copyright}>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://kalamos.care/\">\n              Kalamos Care\n                    </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n          </Typography>\n        </Box>\n      </footer>\n    </Box>\n  );\n};","import decodeJwt from 'jwt-decode';\n\nexport const isAuthenticated = () => {\n  const permissions = localStorage.getItem('permissions');\n  if (!permissions) {\n    return false;\n  }\n  return permissions === 'user' || permissions === 'provider' || permissions === 'admin' ? true : false;\n};\n\n/**\n * Login to backend and store JSON web token on success\n *\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const login = async (email: string, password: string) => {\n  // Assert email or password is not empty\n  if (!(email.length > 0) || !(password.length > 0)) {\n    throw new Error('Email or password was not provided');\n  }\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/token', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\n/**\n * Sign up via backend and store JSON web token on success\n *\n * @param firstName\n * @param lastName\n * @param NPI\n * @param stateLicenses\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const signUp = async (\n  email: string,\n  password: string,\n  passwordConfirmation: string\n) => {\n  // Assert email or password or password confirmation is not empty\n  if (!(email.length > 0)) {\n    throw new Error('Email was not provided');\n  }\n  if (!(password.length > 0)) {\n    throw new Error('Password was not provided');\n  }\n  if (!(passwordConfirmation.length > 0)) {\n    throw new Error('Password confirmation was not provided');\n  }\n\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/signup', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\n\n/**\n * Add provider registration needs here\n */\nexport const mtlRegister = async (\n  email: string,\n  firstName: string,\n  lastName: string,\n  NPI: string,\n  stateLicenses: Array<string>,\n) => {\n  // Error checking\n  if (!(email.length > 0)) {\n    throw new Error('Email was not provided');\n  }\n  if (!(firstName.length > 0)) {\n    throw new Error('First name was not provided');\n  }\n  if (!(lastName.length > 0)) {\n    throw new Error('Last name was not provided');\n  }\n  if (!(NPI.length > 0)) {\n    throw new Error('NPI was not provided');\n  }\n  if (!(stateLicenses.length > 0)) {\n    throw new Error('State licensese were not provided');\n  }\n\n  const request = new Request('/api/register_provider', {\n\n  });\n\n};\n\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('permissions');\n};\n","import React, { FC, useState } from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { login, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const Login: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    setError('');\n    try {\n      const data = await login(email, password);\n\n      if (data) {\n        history.push('/');\n      }\n    } catch (err) {\n      if (err instanceof Error) {\n        // handle errors thrown from frontend\n        setError(err.message);\n      } else {\n        // handle errors thrown from backend\n        setError(err);\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              disableFocusRipple\n              disableRipple\n              className={classes.button}\n              variant=\"text\"\n              color=\"primary\"\n            >\n              Forgot password ?\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          {' '}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => history.push('/signup')}\n          >\n            Sign Up\n          </Button>{' '}\n          &nbsp;\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Login\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { Paper, Grid, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { signUp, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const SignUp: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    // Password confirmation validation\n    if (password !== passwordConfirmation) setError('Passwords do not match');\n    else {\n      setError('');\n      try {\n        const data = await signUp(email, password, passwordConfirmation);\n\n        if (data) {\n          history.push('/');\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          // handle errors thrown from frontend\n          setError(err.message);\n        } else {\n          // handle errors thrown from backend\n          setError(err);\n        }\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"passwordConfirmation\"\n              label=\"Confirm password\"\n              type=\"password\"\n              value={passwordConfirmation}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPasswordConfirmation(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMessage } from '../utils/api';\n// import { isAuthenticated } from '../utils/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: '#ff6e6c',\n  },\n  body: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport const AboutUs: FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const classes = useStyles();\n\n  const queryBackend = async () => {\n    try {\n      const message = await getMessage();\n      setMessage(message);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  return (\n    <main>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            About Us\n            </Typography>\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Put our story here!\n            </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\">\n                  Create Your Account\n                  </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"outlined\" color=\"primary\">\n                  Read More About Us\n                  </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">Ping Backend</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Click me!</Typography>\n              </CardContent>\n              <CardActions>\n                {!message && !error && (\n                  <Button size=\"small\" color=\"primary\">\n\n                    <a className={classes.link} href=\"#\" onClick={() => queryBackend()}>\n                      Click to make request to backend\n                    </a>\n                  </Button>\n                )}\n                {message && (\n                  <p>\n                    <code>{message}</code>\n                  </p>\n                )}\n                {error && (\n                  <p>\n                    Error: <code>{error}</code>\n                  </p>\n                )}\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Admin Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor app users/usage</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/admin\">\n                    Admin Dashboard\n          </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Provider Dashboard\n    </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Monitor your Patients!!!</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                  <a className={classes.link} href=\"/provider-dashboard\">\n                    Protected Route\n      </a>\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </main>\n  );\n};","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../utils/auth';\n\ntype PrivateRouteType = {\n  component: React.ComponentType<any>;\n  path?: string | string[];\n};\n\nexport const PrivateRoute: FC<PrivateRouteType> = ({\n  component,\n  ...rest\n}: any) => (\n  <Route\n    {...rest}\n    render={(props: any) =>\n      isAuthenticated() === true ? (\n        React.createElement(component, props)\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import Header from '../layout/Header';\n// import Footer from '../layout/Footer';\n// import Body from '../layout/Body';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport const ProviderDash: FC = ( { children } ) => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <h1>Put app from provider portal here!</h1>\n            { children }\n        </div>\n    );\n};\n\n// export default Protected","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { Admin } from './admin';\nimport { Home, AboutUs, Login, SignUp } from './marketing';\nimport { PrivateRoute, ProviderDash, UserSettings } from './clinic';\nimport { logout, isAuthenticated } from './utils/auth';\n\nexport const Routes: FC = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/admin\">\n        <Admin />\n      </Route>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route\n        path=\"/logout\"\n        render={() => {\n          logout();\n          history.push('/');\n          return null;\n        }}\n      />\n      <PrivateRoute path=\"/clinic\" component={ProviderDash} />\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  );\n};","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { getUserInfo } from '../utils/api';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport const UserSettings: FC = () => {\n  {/** \n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  **/}\n  const classes = useStyles();\n{/**  \n  const queryBackend = async () => {\n    try {\n      const message = await getUserInfo();\n      setMessage(message);\n    } catch (err) {\n      setError(err);\n    }\n  };\n**/}\n  return (\n    <>\n      <p>List user settings here:</p>\n        <p>\n          <code>{/* getUserInfo() */}</code>\n        </p>\n    </>\n  );\n};","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport const Notifications: FC = () => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <h1>List notifications here!</h1>\n        </div>\n    );\n};","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport const Messages: FC = () => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <h1>List messages here!</h1>\n        </div>\n    );\n};","import React, { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport const Patients: FC = () => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <h1>List patients here!</h1>\n        </div>\n    );\n};","import React, { FC } from 'react';\nimport { Routes } from './Routes';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Should I check for authentication here and route the user accordingly?\n// import { isAuthenticated } from './utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n    /**\n     app: {\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    main: {\n        display: 'flex',\n        flexGrow: 1,\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        //color: 'white',\n    },\n    footer: {\n        display: 'flex',\n        position: 'sticky',\n        bottom: 0,\n    },\n    **/\n}));\n\nconst App: FC = () => {\n    const classes = useStyles();\n\n    {/** {/** \n        If logged in - see the clinic view\n        If not logged in - see the marketing view\n        Must manually navigate to admin to login\n    **/}\n\n    return (\n        <Routes />\n        /** \n        <Box className={classes.app}>\n            <header className={classes.header}>\n                <Header />\n            </header>\n            <main className={classes.main}>\n                <Main />\n            </main>\n            <footer className={classes.footer}>\n                <Footer />\n            </footer>\n        </Box>\n        **/\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}